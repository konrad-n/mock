### SledzSpecke Web API - Comprehensive Test Suite
### Medical Specialization Tracking System API Tests
### Base URL: https://localhost:7093 or http://localhost:5000

@baseUrl = http://localhost:5000
@accessToken = {{auth_response.response.body.accessToken}}

### ===============================================
### 1. AUTHENTICATION ENDPOINTS
### ===============================================

### 1.1 Sign Up - Create a new user account
POST {{baseUrl}}/api/auth/sign-up
Content-Type: application/json

{
  "userId": 1001,
  "email": "dr.kowalski@example.com",
  "username": "dr.kowalski",
  "password": "SecurePassword123!",
  "fullName": "Dr. Jan Kowalski",
  "smkVersion": "New",
  "specializationId": 1
}

### 1.2 Sign In - Authenticate and get JWT token
# @name auth_response
POST {{baseUrl}}/api/auth/sign-in
Content-Type: application/json

{
  "username": "dr.kowalski",
  "password": "SecurePassword123!"
}

### 1.3 Sign Up - Create another user for testing
POST {{baseUrl}}/api/auth/sign-up
Content-Type: application/json

{
  "userId": 1002,
  "email": "dr.nowak@example.com",
  "username": "dr.nowak",
  "password": "SecurePassword123!",
  "fullName": "Dr. Anna Nowak",
  "smkVersion": "Old",
  "specializationId": 2
}

### ===============================================
### 2. USER MANAGEMENT ENDPOINTS
### ===============================================

### 2.1 Get current user details
GET {{baseUrl}}/api/users/1001
Authorization: Bearer {{accessToken}}

### 2.2 Get all users
GET {{baseUrl}}/api/users
Authorization: Bearer {{accessToken}}

### ===============================================
### 3. SPECIALIZATION ENDPOINTS
### ===============================================

### 3.1 Get specialization details
GET {{baseUrl}}/api/specializations/1
Authorization: Bearer {{accessToken}}

### 3.2 Get specialization statistics
GET {{baseUrl}}/api/specializations/1/statistics
Authorization: Bearer {{accessToken}}

### 3.3 Get another specialization (Psychiatry)
GET {{baseUrl}}/api/specializations/2
Authorization: Bearer {{accessToken}}

### ===============================================
### 4. INTERNSHIP MANAGEMENT ENDPOINTS
### ===============================================

### 4.1 Get internships for a specialization
GET {{baseUrl}}/api/internships?specializationId=1
Authorization: Bearer {{accessToken}}

### 4.2 Get internships for specific module
GET {{baseUrl}}/api/internships?specializationId=1&moduleId=1
Authorization: Bearer {{accessToken}}

### 4.3 Create a new internship
POST {{baseUrl}}/api/internships
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "institutionName": "Szpital Uniwersytecki w Krakowie",
  "departmentName": "Oddział Kardiologii",
  "startDate": "2024-01-15T00:00:00",
  "endDate": "2024-06-30T00:00:00",
  "supervisorName": "Prof. dr hab. Marek Kowalczyk",
  "moduleId": 1
}

### 4.4 Create another internship
POST {{baseUrl}}/api/internships
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "institutionName": "Instytut Kardiologii w Warszawie",
  "departmentName": "Pracownia Elektrofizjologii",
  "startDate": "2024-07-01T00:00:00",
  "endDate": "2024-08-31T00:00:00",
  "supervisorName": "Dr Tomasz Nowicki",
  "moduleId": 2
}

### 4.5 Update internship
PUT {{baseUrl}}/api/internships/1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "institutionName": "Szpital Uniwersytecki w Krakowie - Oddział Kardiologii Interwencyjnej",
  "departmentName": "Pracownia Hemodynamiki",
  "supervisorName": "Prof. dr hab. Marek Kowalczyk",
  "startDate": "2024-01-15T00:00:00",
  "endDate": "2024-07-15T00:00:00",
  "moduleId": 1
}

### 4.6 Approve internship
POST {{baseUrl}}/api/internships/1/approve
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "approverName": "Prof. dr hab. Piotr Jankowski - Kierownik Specjalizacji"
}

### ===============================================
### 5. COURSE MANAGEMENT ENDPOINTS
### ===============================================

### 5.1 Get courses for specialization
GET {{baseUrl}}/api/courses?specializationId=1
Authorization: Bearer {{accessToken}}

### 5.2 Get courses for specific module
GET {{baseUrl}}/api/courses?specializationId=1&moduleId=1
Authorization: Bearer {{accessToken}}

### 5.3 Get courses by type
GET {{baseUrl}}/api/courses?specializationId=1&courseType=Mandatory
Authorization: Bearer {{accessToken}}

### 5.4 Create a mandatory course
POST {{baseUrl}}/api/courses
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "courseType": "Mandatory",
  "courseName": "Diagnostyka obrazowa",
  "institutionName": "Centrum Medyczne Kształcenia Podyplomowego",
  "completionDate": "2024-03-15T00:00:00",
  "courseNumber": "DG-2024-001",
  "certificateNumber": "CERT-DG-2024-001",
  "moduleId": 1
}

### 5.5 Create an optional course
POST {{baseUrl}}/api/courses
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "courseType": "Optional",
  "courseName": "Echokardiografia zaawansowana",
  "institutionName": "Polskie Towarzystwo Kardiologiczne",
  "completionDate": "2024-04-20T00:00:00",
  "courseNumber": "ECHO-2024-002",
  "certificateNumber": "CERT-ECHO-2024-002",
  "moduleId": 2
}

### 5.6 Create an attestation course
POST {{baseUrl}}/api/courses
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "courseType": "Attestation",
  "courseName": "Kurs atestacyjny Kardiologia",
  "institutionName": "Centrum Medyczne Kształcenia Podyplomowego",
  "completionDate": "2024-12-15T00:00:00",
  "courseNumber": "ATEST-KARD-2024",
  "certificateNumber": "CERT-ATEST-KARD-2024",
  "moduleId": 2
}

### 5.7 Approve course
POST {{baseUrl}}/api/courses/1/approve
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "approverName": "Prof. dr hab. Piotr Jankowski - Kierownik Specjalizacji"
}

### ===============================================
### 6. ADDITIONAL FEATURES (Phase 2 Entities)
### ===============================================

### 6.1 Create absence record
POST {{baseUrl}}/api/absences
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "absenceType": "Medical",
  "startDate": "2024-05-01T00:00:00",
  "endDate": "2024-05-15T00:00:00",
  "description": "Zwolnienie lekarskie - operacja",
  "documentNumber": "ZL-2024-001"
}

### 6.2 Create recognition record
POST {{baseUrl}}/api/recognitions
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "recognitionType": "Experience",
  "description": "Uznanie doświadczenia zawodowego - 2 lata pracy w kardiologii",
  "durationReduction": 60,
  "approverName": "Komisja Specjalizacyjna",
  "approvalDate": "2024-01-10T00:00:00"
}

### 6.3 Create publication record
POST {{baseUrl}}/api/publications
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "publicationType": "Journal",
  "title": "Nowoczesne metody diagnostyki w kardiologii interwencyjnej",
  "journalName": "Kardiologia Polska",
  "publicationDate": "2024-02-28T00:00:00",
  "authors": "Dr Jan Kowalski, Prof. Marek Kowalczyk",
  "doi": "10.5114/kitp.2024.001",
  "impactFactor": 2.5
}

### 6.4 Create self-education record
POST {{baseUrl}}/api/selfeducation
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "activityType": "Conference",
  "title": "Kongres Polskiego Towarzystwa Kardiologicznego 2024",
  "organizerName": "Polskie Towarzystwo Kardiologiczne",
  "activityDate": "2024-09-15T00:00:00",
  "durationHours": 16,
  "certificateNumber": "PTK-2024-KONGRES-001"
}

### ===============================================
### 7. ERROR HANDLING TEST CASES
### ===============================================

### 7.1 Test unauthorized access (no token)
GET {{baseUrl}}/api/users/1001

### 7.2 Test invalid credentials
POST {{baseUrl}}/api/auth/sign-in
Content-Type: application/json

{
  "username": "invalid_user",
  "password": "wrong_password"
}

### 7.3 Test invalid specialization ID
GET {{baseUrl}}/api/specializations/999
Authorization: Bearer {{accessToken}}

### 7.4 Test create internship with invalid data
POST {{baseUrl}}/api/internships
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 999,
  "institutionName": "",
  "departmentName": "",
  "startDate": "2024-12-31T00:00:00",
  "endDate": "2024-01-01T00:00:00"
}

### 7.5 Test create course with invalid data
POST {{baseUrl}}/api/courses
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 999,
  "courseType": "InvalidType",
  "courseName": "",
  "institutionName": "",
  "completionDate": "invalid-date"
}

### ===============================================
### 8. BULK OPERATIONS & EDGE CASES
### ===============================================

### 8.1 Create multiple internships for different modules
POST {{baseUrl}}/api/internships
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "institutionName": "Szpital MSWiA w Warszawie",
  "departmentName": "Oddział Intensywnej Terapii Kardiologicznej",
  "startDate": "2024-09-01T00:00:00",
  "endDate": "2024-12-31T00:00:00",
  "supervisorName": "Dr hab. Aleksandra Wiśniewska",
  "moduleId": 2
}

### 8.2 Test specialization statistics after adding data
GET {{baseUrl}}/api/specializations/1/statistics
Authorization: Bearer {{accessToken}}

### 8.3 Get all internships to verify creation
GET {{baseUrl}}/api/internships?specializationId=1
Authorization: Bearer {{accessToken}}

### 8.4 Get all courses to verify creation
GET {{baseUrl}}/api/courses?specializationId=1
Authorization: Bearer {{accessToken}}

### ===============================================
### 9. DATA VALIDATION TESTS
### ===============================================

### 9.1 Test SMK version validation (New vs Old)
POST {{baseUrl}}/api/auth/sign-up
Content-Type: application/json

{
  "userId": 1003,
  "email": "dr.test@example.com",
  "username": "dr.test.new",
  "password": "SecurePassword123!",
  "fullName": "Dr. Test New SMK",
  "smkVersion": "New",
  "specializationId": 1
}

### 9.2 Test overlapping internship dates
POST {{baseUrl}}/api/internships
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "specializationId": 1,
  "institutionName": "Test Hospital",
  "departmentName": "Test Department",
  "startDate": "2024-01-01T00:00:00",
  "endDate": "2024-02-28T00:00:00",
  "supervisorName": "Dr Test",
  "moduleId": 1
}

### ===============================================
### 10. PERFORMANCE & LOAD TESTS
### ===============================================

### 10.1 Rapid sequential requests (stress test)
GET {{baseUrl}}/api/specializations/1
Authorization: Bearer {{accessToken}}

###
GET {{baseUrl}}/api/specializations/1/statistics
Authorization: Bearer {{accessToken}}

###
GET {{baseUrl}}/api/internships?specializationId=1
Authorization: Bearer {{accessToken}}

###
GET {{baseUrl}}/api/courses?specializationId=1
Authorization: Bearer {{accessToken}}

### ===============================================
### NOTES:
### 
### 1. Make sure to run the Sign In request first to get the access token
### 2. Replace {{accessToken}} with the actual JWT token from the sign-in response
### 3. Adjust the baseUrl if the API is running on a different port
### 4. Some endpoints may require database seeding with specialization templates
### 5. Error responses should include proper HTTP status codes and meaningful messages
### 
### Expected HTTP Status Codes:
### - 200 OK: Successful GET requests
### - 201 Created: Successful POST requests that create resources
### - 204 No Content: Successful PUT/DELETE requests
### - 400 Bad Request: Invalid request data
### - 401 Unauthorized: Missing or invalid authentication
### - 404 Not Found: Resource not found
### - 500 Internal Server Error: Server-side errors
### ===============================================