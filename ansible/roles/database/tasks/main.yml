---
# PostgreSQL database setup

- name: Add PostgreSQL APT key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  tags: postgres

- name: Add PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    state: present
  tags: postgres

- name: Install PostgreSQL
  apt:
    name:
      - postgresql-{{ postgres_version }}
      - postgresql-client-{{ postgres_version }}
      - postgresql-contrib-{{ postgres_version }}
      - python3-psycopg2
    state: present
  tags: postgres

- name: Configure PostgreSQL
  lineinfile:
    path: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^#?listen_addresses', line: "listen_addresses = 'localhost'" }
    - { regexp: '^#?max_connections', line: 'max_connections = 200' }
    - { regexp: '^#?shared_buffers', line: 'shared_buffers = 256MB' }
    - { regexp: '^#?effective_cache_size', line: 'effective_cache_size = 1GB' }
    - { regexp: '^#?work_mem', line: 'work_mem = 4MB' }
    - { regexp: '^#?maintenance_work_mem', line: 'maintenance_work_mem = 64MB' }
    - { regexp: '^#?checkpoint_completion_target', line: 'checkpoint_completion_target = 0.9' }
    - { regexp: '^#?wal_buffers', line: 'wal_buffers = 16MB' }
    - { regexp: '^#?default_statistics_target', line: 'default_statistics_target = 100' }
    - { regexp: '^#?random_page_cost', line: 'random_page_cost = 1.1' }
    - { regexp: '^#?effective_io_concurrency', line: 'effective_io_concurrency = 200' }
    - { regexp: '^#?min_wal_size', line: 'min_wal_size = 1GB' }
    - { regexp: '^#?max_wal_size', line: 'max_wal_size = 4GB' }
  notify: restart postgresql
  tags: postgres

- name: Configure PostgreSQL authentication
  lineinfile:
    path: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
    regexp: '^local\s+all\s+all'
    line: 'local   all             all                                     peer'
  notify: restart postgresql
  tags: postgres

- name: Start and enable PostgreSQL
  systemd:
    name: postgresql
    state: started
    enabled: yes
  tags: postgres

- name: Create database user
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,NOSUPERUSER
  become_user: postgres
  tags: postgres

- name: Create database
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    encoding: UTF8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
  become_user: postgres
  tags: postgres

- name: Install backup script
  template:
    src: backup-database.sh.j2
    dest: /usr/local/bin/backup-sledzspecke.sh
    mode: '0755'
  tags: backup

- name: Create backup cron job
  cron:
    name: "PostgreSQL daily backup"
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/backup-sledzspecke.sh >> /var/log/sledzspecke/backup.log 2>&1"
    user: postgres
  tags: backup

- name: Create PostgreSQL exporter user for monitoring
  postgresql_user:
    name: postgres_exporter
    password: "{{ postgres_exporter_password | default('exporter123') }}"
    role_attr_flags: LOGIN
    priv: "pg_stat_database:SELECT"
  become_user: postgres
  tags: monitoring

handlers:
  - name: restart postgresql
    systemd:
      name: postgresql
      state: restarted