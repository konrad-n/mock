---
# Common tasks for all servers

- name: Install essential packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      - vim
      - htop
      - git
      - build-essential
      - python3-pip
      - unzip
      - jq
    state: present
  tags: packages

- name: Install security packages
  apt:
    name:
      - fail2ban
      - ufw
      - unattended-upgrades
      - aide
    state: present
  tags: security

- name: Configure UFW firewall
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default('tcp') }}"
    src: "{{ item.src | default(omit) }}"
  loop:
    - { rule: allow, port: 22, comment: "SSH" }
    - { rule: allow, port: 80, comment: "HTTP" }
    - { rule: allow, port: 443, comment: "HTTPS" }
    - { rule: allow, port: 5341, comment: "Seq" }
    - { rule: allow, port: 3001, comment: "Grafana" }
    - { rule: allow, port: 9090, comment: "Prometheus" }
  notify: restart ufw
  tags: firewall

- name: Enable UFW
  ufw:
    state: enabled
    policy: deny
    direction: incoming
  tags: firewall

- name: Configure fail2ban for SSH
  copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 3
      destemail = admin@{{ domain }}
      sendername = Fail2Ban
      action = %(action_mwl)s
      
      [sshd]
      enabled = true
      port = 22
      filter = sshd
      logpath = /var/log/auth.log
      maxretry = 3
      
      [nginx-http-auth]
      enabled = true
      filter = nginx-http-auth
      port = http,https
      logpath = /var/log/nginx/*error.log
      
      [nginx-limit-req]
      enabled = true
      filter = nginx-limit-req
      port = http,https
      logpath = /var/log/nginx/*error.log
  notify: restart fail2ban
  tags: security

- name: Configure unattended upgrades
  copy:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    content: |
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id}:${distro_codename}";
          "${distro_id}:${distro_codename}-security";
          "${distro_id}ESMApps:${distro_codename}-apps-security";
          "${distro_id}ESM:${distro_codename}-infra-security";
      };
      Unattended-Upgrade::AutoFixInterruptedDpkg "true";
      Unattended-Upgrade::MinimalSteps "true";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Automatic-Reboot "false";
      Unattended-Upgrade::Mail "admin@{{ domain }}";
  tags: security

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'
  loop:
    - /var/www/sledzspecke-api
    - /var/www/sledzspecke-web/dist
    - /var/log/sledzspecke
    - /var/log/github-actions/builds
    - /var/log/github-actions/details
    - /var/backups/postgresql
    - /opt/sledzspecke
  tags: directories

- name: Configure sysctl for performance
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { name: 'net.core.somaxconn', value: '65535' }
    - { name: 'net.ipv4.tcp_max_syn_backlog', value: '65535' }
    - { name: 'net.ipv4.ip_local_port_range', value: '1024 65535' }
    - { name: 'net.ipv4.tcp_tw_reuse', value: '1' }
    - { name: 'fs.file-max', value: '65535' }
  tags: performance

- name: Set timezone
  timezone:
    name: Europe/Warsaw
  tags: system

handlers:
  - name: restart ufw
    service:
      name: ufw
      state: restarted
  
  - name: restart fail2ban
    service:
      name: fail2ban
      state: restarted