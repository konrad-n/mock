name: E2E Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test with'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: ['chromium', 'firefox']
        
    name: E2E Tests - ${{ matrix.browser }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Install dependencies
      run: |
        cd SledzSpecke.WebApi
        dotnet restore
        dotnet build
    
    - name: Install Playwright
      run: |
        cd SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install ${{ matrix.browser }}
        playwright install-deps ${{ matrix.browser }}
    
    - name: Run E2E Tests
      env:
        E2ETests__BaseUrl: ${{ secrets.E2E_BASE_URL || 'https://sledzspecke.pl' }}
        E2ETests__ApiUrl: ${{ secrets.E2E_API_URL || 'https://api.sledzspecke.pl' }}
        E2ETests__TestUser__DefaultUsername: ${{ secrets.E2E_TEST_USERNAME || 'e2e_test' }}
        E2ETests__TestUser__DefaultPassword: ${{ secrets.E2E_TEST_PASSWORD || 'Test123!' }}
        E2ETests__Browser: ${{ matrix.browser }}
        E2ETests__Headless: true
      run: |
        cd SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests
        dotnet test --logger "console;verbosity=normal" --logger "trx;LogFileName=${{ matrix.browser }}_results.trx"
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: |
          SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/TestResults/
          SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/Reports/
        retention-days: 30
    
    - name: Upload Screenshots on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-screenshots-${{ matrix.browser }}
        path: SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/Reports/Screenshots/
        retention-days: 7
    
    - name: Upload Videos on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-videos-${{ matrix.browser }}
        path: SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/Reports/Videos/
        retention-days: 7
    
    - name: Upload Traces on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-traces-${{ matrix.browser }}
        path: SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/Reports/Traces/
        retention-days: 7
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: E2E Tests Report - ${{ matrix.browser }}
        path: SledzSpecke.WebApi/tests/SledzSpecke.E2E.Tests/TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: false

  e2e-summary:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Summary
      run: |
        echo "## E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Add test results summary
        for browser in chromium firefox; do
          echo "### $browser Tests" >> $GITHUB_STEP_SUMMARY
          if [ -f "artifacts/test-results-$browser/TestResults/${browser}_results.trx" ]; then
            echo "✅ Test results available" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No test results found" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
        done
        
        # Add links to artifacts
        echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- Screenshots (if failed)" >> $GITHUB_STEP_SUMMARY
        echo "- Videos (if failed)" >> $GITHUB_STEP_SUMMARY
        echo "- Traces (if failed)" >> $GITHUB_STEP_SUMMARY