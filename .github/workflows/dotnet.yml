name: Build MAUI App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-android:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix Windows Targeting Issue
        run: |
          echo '
          <Project>
            <PropertyGroup>
              <EnableWindowsTargeting>true</EnableWindowsTargeting>
            </PropertyGroup>
          </Project>
          ' > Directory.Build.props

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install .NET MAUI Workloads
        run: dotnet workload install maui --ignore-failed-sources

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore SledzSpecke.sln

      - name: Build Main project
        run: dotnet build SledzSpecke.App/SledzSpecke.csproj -f net9.0-android35.0 --no-restore

      - name: Run Tests with Coverage
        run: dotnet test SledzSpecke.sln --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory coverage
        
      - name: Convert Coverage to Cobertura Format
        run: |
          dotnet tool install -g coverlet.console
          coverlet ./SledzSpecke.Tests/bin/Debug/net9.0/SledzSpecke.Tests.dll --target "dotnet" --targetargs "test SledzSpecke.sln --no-build" --output "coverage/coverage.xml" --format cobertura

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=konrad-n
            -Dsonar.projectKey=konrad-n_mock
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.cs.opencover.reportsPaths=coverage/coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
